{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Clean Build WABTAOT",
            "command": "rm -rf /tmp/omrsharedresources/wasm_shared_cache && cd ${workspaceFolder} &&      rm -rf build &&            mkdir build &&         cd build &&    cmake -DBUILD_TOOLS=ON -DWASM_SHARED_CACHE=ON -DOMR_ELF_SHARED_OBJECT=OFF ..  && make -j12",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn":["Generate branch for WABT with Final Changes from Damian"]
        },
        {
            "label": "Clean Build WABTAOT no rebase",
            "command": "rm -rf /tmp/omrsharedresources/wasm_shared_cache && cd ${workspaceFolder} &&      rm -rf build &&            mkdir build &&         cd build &&    cmake -DBUILD_TOOLS=ON -DWASM_SHARED_CACHE=ON -DOMR_ELF_SHARED_OBJECT=OFF ..  && make -j12",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Clean Build EM + WABT",
            "command": "rm -rf /tmp/omrsharedresources/wasm_shared_cache && cd ${workspaceFolder} &&      rm -rf build &&  mkdir build &&         cd build && cmake -DWASM_SHARED_CACHE=ON -DOMR_ELF_SHARED_OBJECT=OFF .. && make -j12",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },
        {
            "label": "Clean Build EM + ELF",
            "command": "rm -rf /tmp/omrsharedresources/wasm_shared_cache && cd ${workspaceFolder} &&      rm -rf build &&  mkdir build &&         cd build && cmake -DWASM_SHARED_CACHE=OFF -DOMR_ELF_SHARED_OBJECT=ON .. && make -j12",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },
        {
            "label": "Clean Build EM Debug",
            "command": "rm -rf /tmp/omrsharedresources/wasm_shared_cache && cd ${workspaceFolder} &&      rm -rf build-em &&            mkdir build-em &&         cd build-em &&    cmake -DWASMJIT_OMR_LOCATION=..  -DWASM_SHARED_CACHE=ON -DOMR_ELF_SHARED_OBJECT=OFF -DEMSCRIPTEN_INTERP_DEBUG=ON -DCMAKE_BUILD_TYPE=Debug ../em-interp  && make -j12",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },
        {
            "label": "Incremental Build EM-Interp",
            "command": "cd build  && make -j12",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },
        {
            "label": "Clean Build WABTAOT+ELF",
            "command": "rm -rf /tmp/omrsharedresources/wasm_shared_cache && cd ${workspaceFolder} &&      rm -rf build &&            mkdir build &&         cd build && cmake -DBUILD_TOOLS=ON  -DOMR_TEST_COMPILER=ON -DOMR_JITBUILDER=ON -DOMR_COMPILER=ON -DOMR_AOT=ON -DWASM_SHARED_CACHE=OFF -DOMR_ELF_SHARED_OBJECT=ON -DCMAKE_BUILD_TOOLS=ON ..  && make -j12",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": ["Generate branch for WABT with Final Changes from Damian"]
        },
        {
            "label": "Clean Build WABTAOT+ELF no rebase",
            "command": "rm -rf /tmp/omrsharedresources/wasm_shared_cache && cd ${workspaceFolder} &&      rm -rf build &&            mkdir build &&         cd build && cmake -DBUILD_TOOLS=ON  -DOMR_TEST_COMPILER=ON -DOMR_JITBUILDER=ON -DOMR_COMPILER=ON -DOMR_AOT=ON -DWASM_SHARED_CACHE=OFF -DOMR_ELF_SHARED_OBJECT=ON -DCMAKE_BUILD_TOOLS=ON ..  && make -j12",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
                }
        },
        {
            "label": "Clean Build Interp",
            "command": "rm -rf /tmp/omrsharedresources/wasm_shared_cache && cd ${workspaceFolder} &&      rm -rf build_interp &&            mkdir build_interp &&         cd build_interp && cmake -DEMSCRIPTEN_INTERP_BUILD=ON -DBUILD_TOOLS=ON  -DOMR_TEST_COMPILER=ON -DOMR_JITBUILDER=ON -DOMR_COMPILER=ON -DOMR_AOT=ON -DWASM_SHARED_CACHE=OFF -DOMR_ELF_SHARED_OBJECT=ON -DCMAKE_BUILD_TOOLS=ON ..  && make -j12",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": ["Generate branch for WABT with Final Changes from Damian"]
        },
        {
            "label": "Incremental Build WABTAOT+ELF no rebase",
            "command": "rm -rf /tmp/omrsharedresources/wasm_shared_cache && cd ${workspaceFolder} &&        cd build && make -j12",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },
        {
            "label": "Test WABTAOT",
            "command": " TESTS_DIR='wabtaot-private-additions/jit/'  bash wabtaot-private-additions/scripts/gitlab-aot-jit-test.sh",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": ["Incremental Build WABTAOT"]
        },
        {
            "label": "Test WABTAOT em-Interp",
            "command": "bash wabtaot-private-additions/scripts/gitlab-aot-jit-test.sh",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "options": {
                "env": {
                    "EXEC": "./build/em-interp/em-interp"
                }
            },
            "dependsOn": ["Incremental Build WABTAOT"]
        },
        {
            "label": "Test WABTAOT Interp",
            "command": "bash wabtaot-private-additions/scripts/gitlab-aot-jit-test.sh",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "options": {
                "env": {
                    "EXEC": "./bin/wasm-interp"
                }
            },
            "dependsOn": ["Incremental Build WABTAOT"]
        },
        {
            "label": "Push OMR to test with aot-in-dev",
            "command": "CWD=`pwd` && cd ${workspaceFolder}/third_party/omr && git push -o ci.variable=\"USE_WABT_BRANCH=aot-in-dev\" && cd $CWD",
            "type": "shell",
            "group": "none"

        },
        {
            "label": "Clean Shared Cache And ELF",
            "command": "rm -rf /tmp/omrsharedresources/wasm_shared_cache && rm -rf *.so",
            "type": "shell",
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "Generate branch for WABT",
            "command": "cd third_party/omr;git rebase --abort; git config --local commit.gpgsign false; CURRENT_BRANCH=`git branch --show-current`; CURRENT_BRANCH=${CURRENT_BRANCH%%-*}; echo $CURRENT_BRANCH; git branch -D $CURRENT_BRANCH-rebased-on-main; git branch -D $CURRENT_BRANCH-wabt; git branch -D $CURRENT_BRANCH-wabt-elf;  git branch -D $CURRENT_BRANCH-oj9; git fetch origin;git clean -fX;git clean -fx;git remote rm github-omr || true;git remote add github-omr https://github.com/eclipse/omr.git ;git checkout main;git reset --hard origin/main;git clean -fX;git clean -fx;git fetch github-omr;git pull github-omr master;git remote set-url --push origin git@gitlab.casa.cs.unb.ca:gkrylov/omr.git;git push --push-option=\"ci.skip\" origin HEAD:main;git checkout $CURRENT_BRANCH;git rebase origin/main;git push -f --push-option=\"ci.skip\" origin HEAD:$CURRENT_BRANCH-rebased-on-main;git rebase origin/AOTRelocationsWIP;git push -f --push-option=\"ci.skip\" origin HEAD:$CURRENT_BRANCH-oj9;git rebase origin/wasm-additions;git push -f --push-option=\"ci.skip\" origin HEAD:$CURRENT_BRANCH-wabt;git rebase origin/ELFNewRebasedNewer;git push -f --push-option=\"ci.skip\" origin HEAD:$CURRENT_BRANCH-wabt-elf;git fetch origin; git reset --hard origin/$CURRENT_BRANCH; git checkout $CURRENT_BRANCH-wabt-elf; git reset --hard origin/$CURRENT_BRANCH-wabt-elf; git config --local commit.gpgsign true",
            "type": "shell",
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "Generate branch for WABT with Final Changes from Damian",
            "command": "cd third_party/omr && git rebase --abort ; git config --local commit.gpgsign false &&  CURRENT_BRANCH=`git branch --show-current` &&  CURRENT_BRANCH=${CURRENT_BRANCH%%-*} &&  echo $CURRENT_BRANCH &&  git branch -D $CURRENT_BRANCH-rebased-on-main ;  git branch -D $CURRENT_BRANCH-wabt ;  git branch -D $CURRENT_BRANCH-wabt-elf ;   git branch -D $CURRENT_BRANCH-oj9 ;  git fetch origin ; git clean -fX ; git clean -fx ; git remote rm github-omr ; git remote add github-omr https://github.com/eclipse/omr.git  && git checkout main && git reset --hard origin/main && git clean -fX && git clean -fx && git fetch github-omr && git pull github-omr master && git remote set-url --push origin git@gitlab.casa.cs.unb.ca:gkrylov/omr.git && git push --push-option=\"ci.skip\" origin HEAD:main && git checkout $CURRENT_BRANCH && git rebase origin/main && git push -f --push-option=\"ci.skip\" origin HEAD:$CURRENT_BRANCH-rebased-on-main && git rebase origin/AOTRelocationsWIP && git push -f --push-option=\"ci.skip\" origin HEAD:$CURRENT_BRANCH-oj9 && git rebase origin/wasm-additions && git push -f --push-option=\"ci.skip\" origin HEAD:$CURRENT_BRANCH-wabt && git rebase origin/FinalChangesRebased && git push -f --push-option=\"ci.skip\" origin HEAD:$CURRENT_BRANCH-wabt-elf && git fetch origin &&  git reset --hard origin/$CURRENT_BRANCH &&  git checkout $CURRENT_BRANCH-wabt-elf &&  git reset --hard origin/$CURRENT_BRANCH-wabt-elf && git config --local commit.gpgsign true",
            "type": "shell",
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "Incremental Build WABTAOT",
            "command": "cd ${workspaceFolder}/build && make -j12  && cd ${workspaceFolder}",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "Test polybench ELF",
            "command": "cd ${workspaceFolder}/polybench && bash ./ci-tests-internal/ci-polybench-aot-test.sh && rm -rf *.so",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "options": {
                "env": {"RESULTS_FOLDER":"testing-results/results-aot-elf","FOLDER_NAME":"medium_output"}
            },
            "problemMatcher": [],
            "dependsOn":["test-aot-elf"]
        },
        {
            "label": "Test polybench ELF incremental",
            "command": "cd ${workspaceFolder}/polybench && bash ./ci-tests-internal/ci-polybench-aot-test.sh && rm -rf *.so",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "options": {
                "env": {"RESULTS_FOLDER":"testing-results/results-aot-elf","FOLDER_NAME":"medium_output"}
            },
            "problemMatcher": [],
            "dependsOn":["test-aot-elf-incremental"]
        },
        {
            "label": "Test polybench SharedCache",
            "command": "cd ${workspaceFolder}/polybench && bash ./ci-tests-internal/ci-polybench-aot-test.sh",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "options": {
                "env": {"RESULTS_FOLDER":"testing-results/results-aot-sc"},
            },
            "problemMatcher": [],
            "dependsOn": ["test-aot-sc"]
        },
        {
            "label": "Test polybench node",
            "command": "cd ${workspaceFolder}/polybench && bash ./ci-tests-internal/ci-polybench-node-test.sh",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "options": {
                "env": {"RESULTS_FOLDER":"testing-results/results-node","FOLDER_NAME":"medium_output"},
            },
            "problemMatcher": []
        },
        {
            "label": "Test polybench em-interp",
            "command": "cd ${workspaceFolder}/polybench && bash ./ci-tests-internal/ci-polybench-interp-test.sh",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "options": {
                "env": {"RESULTS_FOLDER":"testing-results/results-em-interp"},
            },
            "problemMatcher": [],
            "dependsOn": ["Clean Build EM"]
        },
        {
            "label": "Incremental Test polybench em-interp",
            "command": "cd ${workspaceFolder}/polybench && bash ./ci-tests-internal/ci-polybench-interp-test.sh",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "options": {
                "env": {"RESULTS_FOLDER":"testing-results/results-em-interp"},
            },
            "problemMatcher": [],
            "dependsOn": ["Incremental Build EM-Interp"]
        },
        {
            "label": "Diff node and ELF",
            "command": "cd ${workspaceFolder}/polybench && mkdir -p testing-results/diffs-node-elf &&  cp testing-results/results-node/* testing-results/diffs-node-elf && cp testing-results/results-aot-elf/* testing-results/diffs-node-elf   && bash ./ci-tests-internal/ci-diffs.sh",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "options": {
                "env": {"RESULTS_FOLDER":"testing-results/diffs-node-elf"},
            },
            "problemMatcher": [],
            "dependsOn": ["Test polybench node", "Test polybench ELF"]
        },
        {
            "label": "Diff node and ELF incremental",
            "command": "cd ${workspaceFolder}/polybench && mkdir -p testing-results/diffs-node-elf &&  cp testing-results/results-node/* testing-results/diffs-node-elf && cp testing-results/results-aot-elf/* testing-results/diffs-node-elf   && bash ./ci-tests-internal/ci-diffs.sh",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "options": {
                "env": {"RESULTS_FOLDER":"testing-results/diffs-node-elf"},
            },
            "problemMatcher": [],
            "dependsOn": ["Test polybench node", "Test polybench ELF incremental"]
        },
        {
            "label": "Diff node and em-interp",
            "command": "cd ${workspaceFolder}/polybench && mkdir -p testing-results/diffs-node-em-interp &&  cp testing-results/results-node/* testing-results/diffs-node-em-interp && cp testing-results/results-em-interp/* testing-results/diffs-node-em-interp   && bash ./ci-tests-internal/ci-diffs.sh",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "options": {
                "env": {"RESULTS_FOLDER":"testing-results/diffs-node-em-interp"},
            },
            "problemMatcher": [],
            "dependsOn": ["Test polybench node", "Test polybench em-interp"]
        },
        {
            "label": "Successful testing",
            "command": "echo Testing was Successfull && rm -rf polybench/testing-results",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": [],
            "dependsOn": ["Diff node and Shared Cache","Diff node and em-interp", "Diff node and ELF"],
            "dependsOrder": "sequence",
        },
        {
            "label": "Diff node and Shared Cache",
            "command": "cd ${workspaceFolder}/polybench && mkdir -p testing-results/diffs-node-sc &&  cp testing-results/results-node/* testing-results/diffs-node-sc && cp testing-results/results-aot-sc/* testing-results/diffs-node-sc   && bash ./ci-tests-internal/ci-diffs.sh",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "options": {
                "env": {"RESULTS_FOLDER":"testing-results/diffs-node-sc"},
            },
            "problemMatcher": [],
            "dependsOn": ["Test polybench node", "Test polybench SharedCache"]
        },

        {
            "label": "Clean Build and test OMR",
            "command": "rm -rf /tmp/omrsharedresources/wasm_shared_cache && rm -rf ${workspaceFolder}/third_party/omr/build && cd ${workspaceFolder}/third_party/omr/ && mkdir build && cd build && cmake .. && make -j12",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "Clean Build OMR and test Compiler",
            "command": "rm -rf /tmp/omrsharedresources/wasm_shared_cache && rm -rf ${workspaceFolder}/third_party/omr/build && cd ${workspaceFolder}/third_party/omr/ && mkdir build && cd build && cmake -DOMR_COMPILER=ON -DOMR_TEST_COMPILER=ON -DCMAKE_BUILD_TYPE=Debug  -DOMR_JITBUILDER=ON .. && make -j12 && make test",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "Clean Build OMR and test Compiler+aot",
            "command": "rm -rf /tmp/omrsharedresources/wasm_shared_cache && rm -rf ${workspaceFolder}/third_party/omr/build && cd ${workspaceFolder}/third_party/omr/ && mkdir build && cd build && cmake -DOMR_COMPILER=ON -DOMR_TEST_COMPILER=ON -DOMR_JITBUILDER=ON -DOMR_AOT=ON  -DCMAKE_BUILD_TYPE=Debug ..  && make -j12 && make test",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "Incremental Build OMR",
            "command": "rm -rf /tmp/omrsharedresources/wasm_shared_cache && cd ${workspaceFolder}/third_party/omr/build && make -j12",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "Checkout Leo",
            "command": "git checkout leo-main && git submodule update && git checkout 6abbaf9904e4a39c8f79d4bc597e43c9d57c09b7 -- brif_brunless.wasm",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Checkout Leo-debug 1/2",
            "command": "git checkout leo-main-debug && git submodule update && rm -rf .vscode/breakpoints.json && cp wabtaot-private-additions/breakpoints-debug-polybench-correlation-leo-main-debug-05a70a5f.json .vscode/breakpoints.json",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": ["Delete breakpoints"]
        },
        {
            "label": "Delete breakpoints",
            "type": "process",
            "command": "${command:workbench.debug.viewlet.action.removeAllBreakpoints}",
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },
        {
            "label": "Checkout Leo-debug 2/2",
            "type": "process",
            "command": "${command:extension.breakpoint_import}",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn":["Checkout Leo-debug 1/2","Clean Build EM"],
            "dependsOrder": "sequence"
        },
        {
            "label": "Checkout current",
            "command": "git checkout aot-in-dev && git submodule update",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "test-aot-elf",
            "command": "bash wabtaot-private-additions/scripts/gitlab-aot-jit-test.sh && rm -f *.so",
            "type": "shell",
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "dependsOn" : ["Clean Build WABTAOT+ELF"]
        },
        {
            "label": "test-aot-elf-incremental",
            "command": "bash wabtaot-private-additions/scripts/gitlab-aot-jit-test.sh && rm -f *.so",
            "type": "shell",
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "dependsOn" : ["Incremental Build WABTAOT+ELF no rebase"]
        },
        {
            "label": "test-aot-sc",
            "command": "bash wabtaot-private-additions/scripts/gitlab-aot-jit-test.sh ",
            "type": "shell",
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "dependsOn" : ["Clean Build WABTAOT"]
        },
        {
            "label": "Test ext_load",
            "command": "rm -rf /tmp/omrsharedresources/wasm_shared_cache && ./reference-wabt-bin/wat2wasm test/jit/ext_load.txt -o test/jit/wasms/ext_load.wasm && ./reference-wabt-bin/wasm-interp test/jit/wasms/ext_load.wasm --run-all-exports &> test_results/ext_load_interp_golden.out  && ./build/src/aot/wabtaot test/jit/wasms/ext_load.wasm --run-all-exports &> test_results/ext_load_compile.out ",
            "type": "shell",
            "group": {
                "kind": "test",
                "isDefault": true
            }
        },
        {
            "label": "Clean OMR Cache",
            "command": "rm -rf /tmp/omrsharedresources/wasm_shared_cache",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Clone Polybench",
            "command": "git clone git@gitlab.casa.cs.unb.ca:pjelenko/polybench.git",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Clone Wabtaot Private Additions",
            "command": "cd ${workspaceFolder} && git clone git@gitlab.casa.cs.unb.ca:gkrylov/wabtaot-private-additions.git",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Delete Polybench",
            "command": "$rm -rf{workspaceFolder}/polybench",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
    ],
    "inputs": [
        {
          "id": "plain-text-string",
          "type": "promptString",
          "description": "Used for testing. Print something to see if it works",
          "default": "Hello world"
          // type specific configuration attributes
        },
        {
            "id": "USE_OMR_BRANCH",
            "type": "promptString",
            "description": "Type in OMR branch you want to use",
            "default":"AOTRelocationsWIP"
        },
        {
            "id": "Delete Breakpoints",
            "type": "command",
            "command": "workbench.debug.viewlet.action.removeAllBreakpoints"
        },
      ]
}